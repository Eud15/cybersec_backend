# Generated by Django 5.2.5 on 2025-08-27 08:42

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Architecture',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('risque_tolere', models.DecimalField(decimal_places=2, help_text='Pourcentage de risque toléré (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'verbose_name': 'Architecture',
                'verbose_name_plural': 'Architectures',
                'db_table': 'architecture',
            },
        ),
        migrations.CreateModel(
            name='ControleNIST',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('famille', models.CharField(max_length=100)),
                ('priorite', models.CharField(choices=[('P0', 'P0 - Critique'), ('P1', 'P1 - Haute'), ('P2', 'P2 - Moyenne'), ('P3', 'P3 - Basse')], max_length=10)),
            ],
            options={
                'verbose_name': 'Contrôle NIST',
                'verbose_name_plural': 'Contrôles NIST',
                'db_table': 'controle_nist',
            },
        ),
        migrations.CreateModel(
            name='Menace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type_menace', models.CharField(choices=[('MALWARE', 'Malware'), ('INTRUSION', 'Intrusion'), ('PANNE', 'Panne technique'), ('HUMAIN', 'Erreur humaine'), ('NATUREL', 'Catastrophe naturelle'), ('PHYSIQUE', 'Menace physique'), ('AUTRE', 'Autre')], max_length=50)),
                ('severite', models.CharField(choices=[('FAIBLE', 'Faible'), ('MOYEN', 'Moyen'), ('ELEVE', 'Élevé'), ('CRITIQUE', 'Critique')], max_length=10)),
            ],
            options={
                'verbose_name': 'Menace',
                'verbose_name_plural': 'Menaces',
                'db_table': 'menace',
            },
        ),
        migrations.CreateModel(
            name='TypeActif',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': "Type d'actif",
                'verbose_name_plural': "Types d'actifs",
                'db_table': 'type_actif',
            },
        ),
        migrations.CreateModel(
            name='Actif',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('cout', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('criticite', models.CharField(choices=[('FAIBLE', 'Faible'), ('MOYEN', 'Moyen'), ('ELEVE', 'Élevé'), ('CRITIQUE', 'Critique')], default='MOYEN', max_length=10)),
                ('proprietaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('architecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actifs', to='api.architecture')),
                ('type_actif', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='actifs', to='api.typeactif')),
            ],
            options={
                'verbose_name': 'Actif',
                'verbose_name_plural': 'Actifs',
                'db_table': 'actif',
            },
        ),
        migrations.CreateModel(
            name='AttributSecurite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type_attribut', models.CharField(choices=[('CONFIDENTIALITE', 'Confidentialité'), ('INTEGRITE', 'Intégrité'), ('DISPONIBILITE', 'Disponibilité'), ('AUTHENTIFICATION', 'Authentification'), ('AUTORISATION', 'Autorisation'), ('NON_REPUDIATION', 'Non-répudiation')], max_length=20)),
                ('valeur_cible', models.DecimalField(decimal_places=2, help_text='Niveau de sécurité requis (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('valeur_actuelle', models.DecimalField(decimal_places=2, default=0, help_text='Niveau de sécurité actuel (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('priorite', models.CharField(choices=[('P0', 'P0 - Critique'), ('P1', 'P1 - Haute'), ('P2', 'P2 - Moyenne'), ('P3', 'P3 - Basse')], default='P2', max_length=10)),
                ('actif', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributs_securite', to='api.actif')),
            ],
            options={
                'verbose_name': 'Attribut de sécurité',
                'verbose_name_plural': 'Attributs de sécurité',
                'db_table': 'attribut_securite',
                'unique_together': {('actif', 'type_attribut')},
            },
        ),
        migrations.CreateModel(
            name='AttributMenace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('probabilite', models.DecimalField(decimal_places=2, help_text="Probabilité d'occurrence (0-100%)", max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('impact', models.DecimalField(decimal_places=2, help_text="Impact sur l'attribut de sécurité (0-100%)", max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cout_impact', models.DecimalField(decimal_places=2, default=0, help_text="Coût financier estimé de l'impact", max_digits=15)),
                ('attribut_securite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menaces', to='api.attributsecurite')),
                ('menace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributs_impactes', to='api.menace')),
            ],
            options={
                'verbose_name': 'Attribut-Menace',
                'verbose_name_plural': 'Attributs-Menaces',
                'db_table': 'attribut_menace',
                'unique_together': {('attribut_securite', 'menace')},
            },
        ),
        migrations.CreateModel(
            name='LogActivite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(max_length=100)),
                ('objet_type', models.CharField(max_length=100)),
                ('objet_id', models.CharField(max_length=100)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('adresse_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Log d'activité",
                'verbose_name_plural': "Logs d'activité",
                'db_table': 'log_activite',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type_technique', models.CharField(choices=[('TECHNIQUE', 'Technique'), ('ADMINISTRATIF', 'Administratif'), ('PHYSIQUE', 'Physique'), ('PREVENTIF', 'Préventif'), ('DETECTIF', 'Détectif'), ('CORRECTIF', 'Correctif')], max_length=50)),
                ('complexite', models.CharField(choices=[('FAIBLE', 'Faible'), ('MOYEN', 'Moyen'), ('ELEVE', 'Élevé')], default='MOYEN', max_length=10)),
                ('controle_nist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='techniques', to='api.controlenist')),
            ],
            options={
                'verbose_name': 'Technique',
                'verbose_name_plural': 'Techniques',
                'db_table': 'technique',
            },
        ),
        migrations.CreateModel(
            name='MesureDeControle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('nature_mesure', models.CharField(choices=[('ORGANISATIONNEL', 'Organisationnel'), ('TECHNIQUE', 'Technique'), ('PHYSIQUE', 'Physique'), ('JURIDIQUE', 'Juridique')], max_length=50)),
                ('cout_mise_en_oeuvre', models.DecimalField(decimal_places=2, default=0, help_text="Coût initial d'implémentation", max_digits=15)),
                ('cout_maintenance_annuel', models.DecimalField(decimal_places=2, default=0, help_text='Coût de maintenance annuel', max_digits=15)),
                ('efficacite', models.DecimalField(decimal_places=2, help_text='Efficacité de la mesure (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('duree_implementation', models.IntegerField(default=30, help_text="Durée d'implémentation en jours")),
                ('ressources_necessaires', models.TextField(blank=True, help_text='Description des ressources humaines/techniques nécessaires', null=True)),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesures_controle', to='api.technique')),
            ],
            options={
                'verbose_name': 'Mesure de contrôle',
                'verbose_name_plural': 'Mesures de contrôle',
                'db_table': 'mesure_de_controle',
            },
        ),
        migrations.CreateModel(
            name='MenaceControle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('efficacite', models.DecimalField(decimal_places=2, help_text='Efficacité du contrôle contre cette menace (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('statut_conformite', models.CharField(choices=[('NON_CONFORME', 'Non conforme'), ('PARTIELLEMENT', 'Partiellement conforme'), ('CONFORME', 'Conforme'), ('NON_APPLICABLE', 'Non applicable')], default='NON_CONFORME', max_length=20)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('controle_nist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menaces_traitees', to='api.controlenist')),
                ('menace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controles_nist', to='api.menace')),
            ],
            options={
                'verbose_name': 'Menace-Contrôle',
                'verbose_name_plural': 'Menaces-Contrôles',
                'db_table': 'menace_controle',
                'unique_together': {('menace', 'controle_nist')},
            },
        ),
        migrations.CreateModel(
            name='ImplementationMesure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('statut', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('EN_COURS', 'En cours'), ('IMPLEMENTE', 'Implémenté'), ('VERIFIE', 'Vérifié'), ('ANNULE', 'Annulé')], default='PLANIFIE', max_length=20)),
                ('date_debut_prevue', models.DateTimeField(blank=True, null=True)),
                ('date_fin_prevue', models.DateTimeField(blank=True, null=True)),
                ('date_implementation', models.DateTimeField(blank=True, null=True)),
                ('equipe', models.TextField(blank=True, help_text="Membres de l'équipe impliqués", null=True)),
                ('pourcentage_avancement', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('obstacles', models.TextField(blank=True, help_text='Obstacles rencontrés', null=True)),
                ('attribut_menace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='implementations', to='api.attributmenace')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('mesure_controle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='implementations', to='api.mesuredecontrole')),
            ],
            options={
                'verbose_name': 'Implémentation de mesure',
                'verbose_name_plural': 'Implémentations de mesures',
                'db_table': 'implementation_mesure',
                'unique_together': {('attribut_menace', 'mesure_controle')},
            },
        ),
    ]
